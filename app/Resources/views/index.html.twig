{% extends 'commonSideTemplate.html.twig' %}

{% block main_container %}
    <div class="block" ng-app="MyEventCenterApp" ng-controller="EventBrowserController">
        <h1>My Events Center</h1>
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-6">
                    <div role="tabpanel">

                        <!-- Nav tabs -->
                        <ul class="nav nav-tabs" role="tablist">
                            <li role="presentation" class="active"><a href="#comming" aria-controls="comming" role="tab" data-toggle="tab">Coming events</a></li>
                            <li role="presentation"><a href="#address" aria-controls="address" role="tab" data-toggle="tab">Search by address</a></li>
                            <li role="presentation"><a href="#location" aria-controls="location" role="tab" data-toggle="tab">Search by my current location</a></li>
                        </ul>

                        <!-- Tab panes -->
                        <div class="tab-content">
                            <div role="tabpanel" class="tab-pane active" id="comming">
                                {% for event in nearestEvents %}
                                    <div class="event">
                                        <h3><a href="{{path('show_event', {'eventId':event.id})}}">{{event.name}}</a></h3>
                                        <span>{{event.startDate|date('d-m-Y H:i:s')}} - {{event.endDate|date('d-m-Y H:i:s')}}</span>
                                        <div>
                                            {{ event.description }}
                                        </div>
                                        <button class="btn btn-success" onclick="changeLocalization('{{event.address}}');">Show on the map</button>
                                    </div>
                                {% endfor %}
                            </div>
                            <div role="tabpanel" class="tab-pane" id="address">
                                <form>
                                    <div class="form-group">
                                        <label>Address</label>
                                        <input type="text" class="form-control" ng-model="address" placeholder="Address">
                                        <input type="hidden" class="form-control" ng-model="latitude">
                                        <input type="hidden" class="form-control" ng-model="longitude">
                                        <button ng-click="searchByAddress()">Search</button>
                                    </div>
                                </form>
                            </div>
                            <div role="tabpanel" class="tab-pane" id="location">4234423</div>
                        </div>

                    </div>

                </div>
                <div class="col-sm-6">
                    <div id="googleMap" style="width:500px;height:380px;"></div>
                </div>
            </div>
        </div>

    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>
    <script src="http://maps.googleapis.com/maps/api/js"></script>
    <script>
        var myEventCenterApp = angular.module('MyEventCenterApp', [
        ]);
        myEventCenterApp.controller('EventBrowserController', ['$scope', '$http', function ($scope, $http) {
        $scope.searchByAddress = function() {
            
            geocoder = new google.maps.Geocoder();
            geocoder.geocode({
                'address': $scope.address
            }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    var latitude = results[0].geometry.location.lat();
                    var longitude = results[0].geometry.location.lng();
                    
                    $http.post('{{path('find_the_closest_events')}}', {'latitude':latitude, 'longitude':longitude}).
                    success(function(data, status, headers, config) {
                    // this callback will be called asynchronously
                    // when the response is available
                    }).
                    error(function(data, status, headers, config) {
                    // called asynchronously if an error occurs
                    // or server returns response with an error status.
                    });
                }
            });
            };
        }]);
    </script>
    <script>
                                                    var homepageMap;
                                                    var homepageMapMarker;
                                                    function initialize() {
                                                    var mapProp = {
                                                    center: new google.maps.LatLng(50.264302, 19.023628),
                                                            zoom: 6,
                                                            mapTypeId: google.maps.MapTypeId.ROADMAP
                                                    };
                                                            homepageMap = new google.maps.Map(document.getElementById("googleMap"), mapProp);
                                                    }
                                            google.maps.event.addDomListener(window, 'load', initialize);
                                                    function changeLocalization(newAddress) {
                                                    var geocoder = new google.maps.Geocoder();
                                                            geocoder.geocode({
                                                            'address': newAddress
                                                            }, function (results, status) {
                                                            if (status == google.maps.GeocoderStatus.OK) {
                                                            if (typeof (homepageMapMarker) !== 'undefined') {
                                                            homepageMapMarker.setMap(null);
                                                            }
                                                            homepageMapMarker = new google.maps.Marker({
                                                            map: homepageMap,
                                                                    position: results[0].geometry.location
                                                            });
                                                                    homepageMap.setCenter(homepageMapMarker.getPosition());
                                                            }
                                                            });
                                                    }
    </script>
{% endblock %}